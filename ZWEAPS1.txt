class Revolver : DoomWeapon
{
	//$Category ".44 Magnum"
	//$Title ".44 Magnum"
 	Default
	{
		Weapon.SelectionOrder 1090;
		+WEAPON.NOALERT
		+WEAPON.NOAUTOAIM
		+WEAPON.AMMO_OPTIONAL
		+INVENTORY.UNTOSSABLE
		+INVENTORY.UNDROPPABLE
		Weapon.slotnumber 2;
		Weapon.Ammogive 0;
		Weapon.AmmoUse1 0;
		Weapon.AmmoUse2 0;
		Weapon.AmmoType1 "RifleShells";
		Weapon.AmmoType2 "BPistolAmmo2";
		Inventory.Pickupmessage "You got the Revolver!";
		Obituary "%o was blasted by a Revolver";
		inventory.pickupsound "weapons/getweapon02";
		Tag "Revolver";
		scale 0.45;
	}
	States
	{
	Ready:
		REVO A 1 A_WeaponReady(WRF_ALLOWRELOAD|WRF_ALLOWUSER1);
		Loop;
	Deselect:
		TNT1 A 0 A_PlaySound("DRAW", CHAN_WEAPON);
	PutAway:
		REVO C 1 A_Lower;
		Loop;
	Select:
		TNT1 A 0 A_PlaySound("DRAW", CHAN_WEAPON);
	PullOut:
		REVO A 1 A_Raise;
		Loop;
	User1: 
		TNT1 A 0 A_SpawnItemEx("LimitRevolver", 70, 0, -10, 15, 0, 5, 0, SXF_SETMASTER);
		TNT1 A 0 A_TakeInventory("Token",1);
		TNT1 A 0 A_TakeInventory("Revolver",1);
		stop;
	Fire:
	    TNT1 A 0 A_JumpIfInventory("BPistolAmmo2",1,1);
        Goto NoAmmo;
		REVF A 1 BRIGHT;
		TNT1 A 0 A_TakeInventory("BPistolAmmo2",1);
		TNT1 A 0 A_AlertMonsters;
		TNT1 A 0 A_FireBullets (0, 0, 1, 65, "Puff2", FBF_NORANDOM);
		TNT1 A 0 A_PlaySound("RVLVFIR", CHAN_WEAPON);
		REVO B 1;
		REVO C 1;
		REVO D 3;
		REVO C 2;
		REVO B 2;
		REVO A 4 A_ReFire;
		Goto Ready;
	NoAmmo:	
		REVO A 2 A_PlaySound("weapons/empty");
		REVO BCB 3;
	Reload:
		TNT1 A 0 A_JumpIfInventory("RifleShells",1,1);
		Goto Ready;
		TNT1 A 0 A_JumpIfInventory("BPistolAmmo2",6,"Ready");
		// Uncomment the next line if you want it to waste extra bullets you didn't spend before reload (realistic but anti-player)
		//TNT1 A 0 A_Takeinventory("BPistolAmmo2",6);
		REVQ ABCD 2;
		REVR AB 2;
		TNT1 A 0 A_PlaySound("CHAMB");
		REVR CDEFGHI 1;
		TNT1 A 0  A_SpawnItemEx("762MMCasingSpawner", frandom(15,20), 0,frandom(height/2,height/2+frandom(0.5,1.5)),0,frandom(1.5,3.5),frandom(-2,-5),0,SXF_NOCHECKPOSITION);
		TNT1 A 0  A_SpawnItemEx("762MMCasingSpawner", frandom(15,20), 0,frandom(height/2,height/2+frandom(0.5,1.5)),0,frandom(1.5,3.5),frandom(-2,-5),0,SXF_NOCHECKPOSITION);
		TNT1 A 0  A_SpawnItemEx("762MMCasingSpawner", frandom(15,20), 0,frandom(height/2,height/2+frandom(0.5,1.5)),0,frandom(1.5,3.5),frandom(-2,-5),0,SXF_NOCHECKPOSITION);
		TNT1 A 0  A_SpawnItemEx("762MMCasingSpawner", frandom(15,20), 0,frandom(height/2,height/2+frandom(0.5,1.5)),0,frandom(1.5,3.5),frandom(-2,-5),0,SXF_NOCHECKPOSITION);
		TNT1 A 0  A_SpawnItemEx("762MMCasingSpawner", frandom(15,20), 0,frandom(height/2,height/2+frandom(0.5,1.5)),0,frandom(1.5,3.5),frandom(-2,-5),0,SXF_NOCHECKPOSITION);
		TNT1 A 0  A_SpawnItemEx("762MMCasingSpawner", frandom(15,20), 0,frandom(height/2,height/2+frandom(0.5,1.5)),0,frandom(1.5,3.5),frandom(-2,-5),0,SXF_NOCHECKPOSITION);
		TNT1 A 0 A_PlaySound("DCASING",CHAN_BODY, 2.0);
		REVR JKLMNOPQ 1;
		TNT1 A 0 A_PlaySound("SNAP");
		REVR RSTUVWXYEDC 1;
		TNT1 A 0 A_PlaySound("pistol_u");
		REVR BA 2;
		REVQ DCBA 2;
	ReloadRepeat:	
		TNT1 A 0 A_JumpIfInventory("BPistolAmmo2", 6, "ReloadFinish");
		TNT1 A 0 A_JumpIfInventory("RifleShells", 1, 1);
		Goto ReloadFinish;
		TNT1 A 0 A_GiveInventory("BPistolAmmo2", 1);
		TNT1 A 0 A_Takeinventory("RifleShells",1);
		Goto ReloadRepeat;
	ReloadFinish:
		Goto Ready;
 	Spawn:
		REVI A -1;
		Stop;
	}
}

// This is a FAKE ammo used to track the amount of rounds in chamber
Class BPistolAmmo2 : Ammo
{
	Default
	{
		Inventory.Amount 6;
		Inventory.MaxAmount 6;
		Ammo.BackpackAmount 0;
		Ammo.BackpackMaxAmount 6;
		Decal "BulletChip";
	}
}

//Weapon: Quake Grenade Launcher
//By: sprites by Zrrion
class QGrenadeLauncher : DoomWeapon
{
	Default
	{
		scale 0.75;
		inventory.pickupmessage "You got the Grenade Launcher!";
		obituary "%o eats %k's pineapple.";
		+WEAPON.NOALERT
		+WEAPON.NOAUTOAIM
		+WEAPON.AMMO_OPTIONAL
		+INVENTORY.UNTOSSABLE
		+INVENTORY.UNDROPPABLE
		weapon.ammotype1 "RocketAmmo";
		weapon.ammouse1 1;
		weapon.ammogive1 0;
		weapon.ammotype2 "RocketAmmo";
		weapon.ammouse2 1;
		weapon.ammogive2 0;
	}
	states
	{
	Spawn:
		GNDL S -1;
		stop;
	Ready:
		GNDL A 1 A_WeaponReady(WRF_ALLOWUSER1);
		loop;
	User1: 
		TNT1 A 0 A_SpawnItemEx("LimitQGrenadeLauncher", 70, 0, -10, 15, 0, 5, 0, SXF_SETMASTER);
		TNT1 A 0 A_TakeInventory("Token",1);
		TNT1 A 0 A_TakeInventory("QGrenadeLauncher",1);
		stop;
	Deselect:
		GNDL A 1 A_Lower;
		NULL AA 0 A_Lower;
		loop;
	Select:
		GNDL A 1 A_Raise;
		NULL AA 0 A_RAISE;
		loop;
	Fire:
		TNT1 A 0 A_JumpIfNoAmmo("Dryfire");
		GNDL A 5;
		Hold:
		TNT1 A 0 A_JumpIfNoAmmo("Dryfire");
		GNDL B 0 A_StartSound("q2weapon/grenadelaunfire",CHAN_WEAPON);
		GNDL B 4 Bright A_FireProjectile("QGrenade",0,1,0,3,0,-10);
		GNDL A 0 A_GunFlash;
		GNDL C 4 Bright ACS_Execute(287,0,random(-15,15),0,0);
		GNDL D 2;
		GNDL A 4 offset(0,52);
		GNDL A 3 offset(0,47);
		GNDL A 2 offset(0,42);
		GNDL A 2 offset(0,37);
		GNDL A 1 offset(0,32);
		goto Ready;
	Dryfire:
		TNT1 A 0 A_StartSound("weapons/empty",CHAN_WEAPON);
		GNDL A 2;
		GNDL A 0 A_CheckReload;
		Goto Ready;
	AltFire:
		TNT1 A 0 A_JumpIfNoAmmo("AltDryfire");
		GNDL A 5;
		AltHold:
		TNT1 A 0 A_JumpIfNoAmmo("AltDryfire");
		TNT1 A 0 A_StartSound("BOFIRE",CHAN_WEAPON);
		GNDL B 4 Bright A_FireProjectile("StickyGrenade",0,1,0,3,-10);
		GNDL A 0 A_GunFlash;
		GNDL C 4 Bright ACS_Execute(287,0,random(-15,15),0,0);
		GNDL D 2;
		GNDL A 4 offset(0,62);
		GNDL A 4 offset(0,57);
		GNDL A 4 offset(0,52);
		GNDL A 3 offset(0,47);
		GNDL A 2 offset(0,42);
		GNDL A 2 offset(0,37);
		GNDL A 1 offset(0,32);
		goto Ready;
	AltDryfire:
		TNT1 A 0 A_StartSound("weapons/empty",CHAN_WEAPON);
		GNDL A 2;
		GNDL A 0 A_CheckReload;
		Goto Ready;
	}
}

class StickyGrenade : Actor
{
    default 
	{
		Gravity 0.65;
		Seesound "OVLOATK";
		Health 1;
		Radius 8;
		Height 8;
		Damage 0;
		Scale 0.65;
        Speed 14;
		Projectile;
		+Shootable; //So alt fire works.
		//+SeekerMissile //So A_Fire works.
		+HITTRACER;
        +NOBLOOD;
		+DontSplash;
		+ForceRadiusDmg;
		+EXTREMEDEATH;
		+DontFall; //Stops it from falling after sticking to targets.
		-NOGRAVITY;
		-NOBLOCKMAP;
    }

    states 
	{
	Spawn:
		TNT1 A 0 NoDelay ThrustThingZ(0,random(10,12),0,1);
	S2:
		TNT1 A 0 A_AlertMonsters;
		TNT1 A 0 A_SetRenderStyle(0.9, STYLE_Translucent);
	S3:
		MORT ABCD 2;
		Loop;
    Death:
		TNT1 A 0 {		
		bTHRUACTORS = true;
		}
		TNT1 A 0 A_NoGravity;
		MORT ABCDABCDABCD 5;
        TNT1 A 0 {
            bShootable = false;
            bMissile = false;
            bNoGravity = true;
            A_ChangeLinkFlags (blockmap: true);
        }
        goto Explode;		
	Stickening:
		MORT DDDDDDDDDDDDDDDDDDDDDDDDDDDDDD 1 Bright A_Warp(AAPTR_TRACER,0,0,32,0,WARPF_COPYINTERPOLATION|WARPF_NOCHECKPOSITION);
		MORT DDDDDDDDDDDDDDDDDDDDDDDDDDDDDD 1 Bright A_Warp(AAPTR_TRACER,0,0,32,0,WARPF_COPYINTERPOLATION|WARPF_NOCHECKPOSITION);
		Goto Explode;
	XDeath:
		TNT1 A 0 {		
		bTHRUACTORS = true;
		}
		TNT1 A 0 A_Stop;
		TNT1 A 0 A_NoGravity;
		Goto Stickening;
	Explode:
		TNT1 A 0 A_StartSound("BOEXP");
        EXP2 A 2 Bright A_Explode(30,32);
        EXP2 BCDEFGHIJKLMN 2 Bright;
		Stop;
    }
}